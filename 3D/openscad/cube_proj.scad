include <coordinates.scad>;

module 4Dto3D(t) {
	// 4d
	$fn = 20;
	//  david
	//  2.00000   2.00000   2.00000
	//  0.66667   0.66667   0.66667
	// -0.66667   0.66667   0.66667
	// -2.00000   2.00000   2.00000

	//  2.00000  -2.00000   2.00000
	//  0.66667  -0.66667   0.66667
	// -0.66667  -0.66667   0.66667
	// -2.00000  -2.00000   2.00000

	//  2.00000   2.00000  -2.00000
	//  0.66667   0.66667  -0.66667
	// -0.66667   0.66667  -0.66667
	// -2.00000   2.00000  -2.00000

	//  2.00000  -2.00000  -2.00000
	//  0.66667  -0.66667  -0.66667
	// -0.66667  -0.66667  -0.66667
	// -2.00000  -2.00000  -2.00000
	g = 2;
	h = 2/3;
	translate([-t,0,t]) scale(10) {
//	translate([-sqrt(2), 0, sqrt(2)]) rotate([45, 0, 90]) scale([1.5,1,.01]) circle(1);
		polyhedron2([
				[ g, g, g],
				[ h, h, h],
				[-h, h, h],
				[-g, g, g],

				[ g,-g, g],
				[ h,-h, h],
				[-h,-h, h],
				[-g,-g, g],

				[ g, g,-g],
				[ h, h,-h],
				[-h, h,-h],
				[-g, g,-g],

				[ g,-g,-g],
				[ h,-h,-h],
				[-h,-h,-h],
				[-g,-g,-g],
			],
			[
				[0, 3],
				[3, 7],
				[7, 4],
				[4, 0],
				[8, 11],
				[11, 15],
				[15, 12],
				[12, 8],
				[0, 8],
				[3, 11],
				[7, 15],
				[4, 12],
				[1, 2],
				[2, 6],
				[6, 5],
				[5, 1],
				[9, 10],
				[10, 14],
				[14, 13],
				[13, 9],
				[1, 9],
				[2, 10],
				[6, 14],
				[5, 13],
				[0, 1],
				[3, 2],
				[4, 5],
				[7, 6],
				[8, 9],
				[11, 10],
				[12, 13],
				[15, 14],
			],
			.1);
	}
	// 4d
	//  david
	//  0.00000   3.41421   3.41421
	//  1.41421   1.00000   1.00000
	//  0.00000   0.58579   0.58579
	// -1.41421   1.00000   1.00000

	//  0.00000  -3.41421   3.41421
	//  1.41421  -1.00000   1.00000
	//  0.00000  -0.58579   0.58579
	// -1.41421  -1.00000   1.00000

	//  0.00000   3.41421  -3.41421
	//  1.41421   1.00000  -1.00000
	//  0.00000   0.58579  -0.58579
	// -1.41421   1.00000  -1.00000

	//  0.00000  -3.41421  -3.41421
	//  1.41421  -1.00000  -1.00000
	//  0.00000  -0.58579  -0.58579
	// -1.41421  -1.00000  -1.00000
	i = 0;
	j = 2+sqrt(2);
	k = 2-sqrt(2);
	l = sqrt(2);
	m = 1;
	translate([t,0,t]) scale(10) {
//	translate([-2, 0, 2]) rotate([45, 0, 90]) scale([2,2,.01]) circle(1);
		polyhedron2([
				[ i, j, j],
				[ l, m, m],
				[ i, k, k],
				[-l, m, m],
				[ i,-j, j],
				[ l,-m, m],
				[ i,-k, k],
				[-l,-m, m],
				[ i, j,-j],
				[ l, m,-m],
				[ i, k,-k],
				[-l, m,-m],
				[ i,-j,-j],
				[ l,-m,-m],
				[ i,-k,-k],
				[-l,-m,-m],
			],
			[
				[0, 3],
				[3, 7],
				[7, 4],
				[4, 0],
				[8, 11],
				[11, 15],
				[15, 12],
				[12, 8],
				[0, 8],
				[3, 11],
				[7, 15],
				[4, 12],
				[1, 2],
				[2, 6],
				[6, 5],
				[5, 1],
				[9, 10],
				[10, 14],
				[14, 13],
				[13, 9],
				[1, 9],
				[2, 10],
				[6, 14],
				[5, 13],
				[0, 1],
				[3, 2],
				[4, 5],
				[7, 6],
				[8, 9],
				[11, 10],
				[12, 13],
				[15, 14],
			],
			.1);
	}
}

module 3Dto2D(t) {
	// 3d
	$fn = 20;
	//  david
	//  2.00000   2.00000
	//  0.66667   0.66667
	// -0.66667   0.66667
	// -2.00000   2.00000
	//  2.00000  -2.00000
	//  0.66667  -0.66667
	// -0.66667  -0.66667
	// -2.00000  -2.00000
	a = 2;
	b = 2/3;
	translate([-t,0,0]) scale(10) {
		polyhedron2([
				[ a, a, 0],
				[ b, b, 0],
				[-b, b, 0],
				[-a, a, 0],
				[ a,-a, 0],
				[ b,-b, 0],
				[-b,-b, 0],
				[-a,-a, 0],
			],
			[
				[0, 3],
				[3, 7],
				[7, 4],
				[4, 0],
				[1, 2],
				[2, 6],
				[6, 5],
				[5, 1],
				[0, 1],
				[3, 2],
				[4, 5],
				[7, 6],
			],
			.1);
	}
	// 3d
	//  david
	//  0.00000   3.41421
	//  1.41421   1.00000
	//  0.00000   0.58579
	// -1.41421   1.00000
	//  0.00000  -3.41421
	//  1.41421  -1.00000
	//  0.00000  -0.58579
	// -1.41421  -1.00000
	c = 2+sqrt(2);
	d = 2-sqrt(2);
	e = sqrt(2);
	f = 1;
	translate([t,0,0]) scale(10) {
		polyhedron2([
				[ 0, c, 0],
				[ e, f, 0],
				[ 0, d, 0],
				[-e, f, 0],
				[ 0,-c, 0],
				[ e,-f, 0],
				[ 0,-d, 0],
				[-e,-f, 0],
			],
			[
				[0, 3],
				[3, 7],
				[7, 4],
				[4, 0],
				[1, 2],
				[2, 6],
				[6, 5],
				[5, 1],
				[0, 1],
				[3, 2],
				[4, 5],
				[7, 6],
			],
			.1);
	}
}

4Dto3D(40);
3Dto2D(40);
